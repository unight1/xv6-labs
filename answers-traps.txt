1.函数参数存放在a0、a1、a2等通用寄存器中。在main函数调用printf时，数值13保存在寄存器a2中。
2.在call.asm中，函数f和g都被编译器进行了内联优化处理。main 的汇编代码没有调用 f 和 g 函数。这种优化避免了函数调用的开销，说明编译器能够识别并优化简单的函数调用，将其转换为直接计算，提高了代码执行效率。
3.printf函数位于地址0x0000000000000640
4.地址0x30处的jalr指令（jalr 1536(ra)）将ra寄存器设置为下一条指令的地址，即0x38（exit(0)调用）。因此，jalr指令执行后ra中的值是0x38。
5.He110 World
6.在y=之后，将打印一个不可预测的值。这是因为printf期望为两个%d格式说明符提供两个整数参数，但只提供了一个参数（3）。第二个%d将读取本应传递第二个参数的寄存器（a2）中的任意值，这是未定义行为。
